/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diapovision;

import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.Timer;

/**
 *
 * @author arthur
 */
public class FullScreen extends javax.swing.JFrame implements ActionListener {
    JpImage img;
    private JpImage[] imgs;
    private  Timer  timer;
    private int delay = 3;
    private int t = 0;
    /**
     * Creates new form FullScreen
     */
    public FullScreen() {
        initComponents();
        timer = new Timer(1000, this);
        timer.start();
    }

    public void start(){
        GraphicsEnvironment graphicsEnvironment=GraphicsEnvironment.getLocalGraphicsEnvironment();
        Rectangle maximumWindowBounds=graphicsEnvironment.getMaximumWindowBounds();
        this.setBounds(maximumWindowBounds);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        prev = new javax.swing.JButton();
        btPlay = new javax.swing.JButton();
        next = new javax.swing.JButton();
        sliderDelay = new javax.swing.JSlider();
        diapo = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        prev.setText("<");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });
        buttonPanel.add(prev);

        btPlay.setText("||");
        btPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPlayActionPerformed(evt);
            }
        });
        buttonPanel.add(btPlay);

        next.setText(">");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        buttonPanel.add(next);

        sliderDelay.setMaximum(10);
        buttonPanel.add(sliderDelay);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout diapoLayout = new javax.swing.GroupLayout(diapo);
        diapo.setLayout(diapoLayout);
        diapoLayout.setHorizontalGroup(
            diapoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        diapoLayout.setVerticalGroup(
            diapoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );

        getContentPane().add(diapo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        int pos = getPos();
        if(pos>=imgs.length-1)pos = -1;
        changeImage(imgs[pos+1]);
    }//GEN-LAST:event_nextActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        int pos = getPos();
        if(pos<=0)pos = imgs.length;
        changeImage(imgs[pos-1]);
    }//GEN-LAST:event_prevActionPerformed

    private void btPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPlayActionPerformed
        if(timer.isRunning()){
            timer.stop();
            btPlay.setText(">");
        }
        else{
            timer.start();
            btPlay.setText("||");
        }  
    }//GEN-LAST:event_btPlayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FullScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FullScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FullScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FullScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FullScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPlay;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel diapo;
    private javax.swing.JButton next;
    private javax.swing.JButton prev;
    private javax.swing.JSlider sliderDelay;
    // End of variables declaration//GEN-END:variables

    void setImages(JpImage[] imgs) {
        this.imgs = imgs;
        img = imgs[0];
        changeImage(img);
    }

    private int getPos() {
        for(int i = 0; i < imgs.length; i++){
            if(img == imgs[i]){
                return i;
            }
        }
        return 0;
    }

    private void changeImage(JpImage img) {
        this.diapo.remove(this.img);
        this.img = img;
        this.diapo.add(this.img);
        final int imgWidth = this.img.getImage().getWidth();
        final int diapoWidth = this.diapo.getWidth();
        final int imgHeight = this.img.getImage().getHeight();
        final int diapoHeight = this.diapo.getHeight();
        int width = Math.min(imgWidth, diapoWidth);
        int height = Math.min(imgHeight, diapoHeight);
        if(width==diapoWidth||height==diapoHeight){
            float ratio = (imgWidth*1.0f)/imgHeight;
            if(ratio>1){
                width = diapoWidth;
                height = Math.round(width/ratio);
            }else{
                height = diapoHeight;
                width = Math.round(height/ratio);
            }
        }
        this.img.redimention(width, height);
        this.diapo.doLayout();
        this.repaint();
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        t++;
        if(t==delay){
            t=0;
            int i = getPos();
            if(i==imgs.length){
                changeImage(imgs[0]);
            }
            changeImage(imgs[i+1]);
        }
    }
}
